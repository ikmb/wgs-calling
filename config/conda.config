
// Job paramaters to set for this environment

process {

	withName:runTrimgalore {
		conda = "trim-galore=0.5.0"
		time = { check_max( 5.h * task.attempt, 'time' ) }
		memory = { check_max( 8.GB * task.attempt, 'memory' ) }
	}
	withName:runBwa {
        	conda = "bwa=0.7.17 samtools=1.5"
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
		cpus = { check_max( 16 * task.attempt, 'cpus' ) }
	}
	withName:runMergeCram {
		conda = "samtools=1.5"
		memory = "120GB"
		cpus = 16
		time = { 8.h * task.attempt }
	}
	withName:runMarkDuplicates {
		conda = "gatk4=4.0.7.0"
		memory = "120GB"
		cpus = 2
		time = { 48.h * task.attempt }
	}
	withName:runBaseRecalibrator {
		conda = "gatk4=4.0.9.0"
		time = { 24.h * task.attempt }
		memory = { 32.GB * task.attempt }
		cpus = 2
  	}
	withName:runHCSample {
	     	conda = "gatk4=4.0.9.0"
		time = { check_max( 48.h * task.attempt, 'time' ) }
		memory = { check_max( 16.GB * task.attempt, 'memory' ) }
	        cpus = 8 
	}
	withName:runGenomicsDBImport {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 24.h * task.attempt, 'time' ) }
                memory = { check_max( 16.GB * task.attempt, 'memory' ) }
	        cpus = { check_max( 5 * task.attempt, 'cpus' ) }
        }
        withName:runJoinedGenotyping {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 24.h * task.attempt, 'time' ) }
                memory = { check_max( 8.GB * task.attempt, 'memory' ) }
	        cpus = 16
        }
        withName:combineVariantsFromGenotyping {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 24.h * task.attempt, 'time' ) }
                memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        }	
        withName:runRecalibrationModeSNP {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 24.h * task.attempt, 'time' ) }
                memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        }
        withName:runRecalibrationModeIndel {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 16.h * task.attempt, 'time' ) }
                memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        }
        withName:runRecalIndelApply {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 8.h * task.attempt, 'time' ) }
                memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        }
        withName:runRecalSNPApply {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 12.h * task.attempt, 'time' ) }
                memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        }
	withName:runVariantFiltrationIndel {
                conda = "gatk4=4.0.9.0"
                time = { check_max( 6.h * task.attempt, 'time' ) }
                memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        }
	withName:runBaseRecalibratorPostRecal {
		conda = "gatk4=4.0.9.0 r-base=3.2.0"
		time = { 12.h * task.attempt }
	}
	withname:runApplyBQSR {
		conda = "gatk4=4.0.9.0"
		time = { 72.h * task.attempt }
		memory = "28GB"
	}
	withName:runCollectWgsMetrics {
		conda = "picard=2.18.4"
		time = { 12.h * task.attempt }
		memory = { 8.GB * task.attempt }
	}
	withName:runCollectMultipleMetrics {
		conda = "picard=2.18.4 r-base=3.2.0"
		time = { 18.h * task.attempt }
		memory = { 8.GB * task.attempt }
	}
	withName:"runMultiQCSample|runMultiQCLibrary" {
		conda = "multiqc=1.6"
		module = [ 'Python/2.7.10',"MultiQC/1.4" ]
		time = {  4.h * task.attempt }
		memory = "7GB"
	}

}



